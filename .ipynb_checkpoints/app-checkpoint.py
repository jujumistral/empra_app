{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ab3ef4b2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: jupyter-dash in c:\\users\\jsenf\\python\\lib\\site-packages (0.4.2)\n",
      "Requirement already satisfied: dash in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-dash) (2.18.2)\n",
      "Requirement already satisfied: requests in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-dash) (2.31.0)\n",
      "Requirement already satisfied: flask in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-dash) (2.2.5)\n",
      "Requirement already satisfied: retrying in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-dash) (1.3.4)\n",
      "Requirement already satisfied: ipython in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-dash) (8.20.0)\n",
      "Requirement already satisfied: ipykernel in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-dash) (6.28.0)\n",
      "Requirement already satisfied: ansi2html in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-dash) (1.9.2)\n",
      "Requirement already satisfied: nest-asyncio in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-dash) (1.6.0)\n",
      "Requirement already satisfied: Werkzeug<3.1 in c:\\users\\jsenf\\python\\lib\\site-packages (from dash->jupyter-dash) (2.2.3)\n",
      "Requirement already satisfied: plotly>=5.0.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from dash->jupyter-dash) (5.9.0)\n",
      "Requirement already satisfied: dash-html-components==2.0.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from dash->jupyter-dash) (2.0.0)\n",
      "Requirement already satisfied: dash-core-components==2.0.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from dash->jupyter-dash) (2.0.0)\n",
      "Requirement already satisfied: dash-table==5.0.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from dash->jupyter-dash) (5.0.0)\n",
      "Requirement already satisfied: importlib-metadata in c:\\users\\jsenf\\python\\lib\\site-packages (from dash->jupyter-dash) (7.0.1)\n",
      "Requirement already satisfied: typing-extensions>=4.1.1 in c:\\users\\jsenf\\python\\lib\\site-packages (from dash->jupyter-dash) (4.9.0)\n",
      "Requirement already satisfied: setuptools in c:\\users\\jsenf\\python\\lib\\site-packages (from dash->jupyter-dash) (68.2.2)\n",
      "Requirement already satisfied: Jinja2>=3.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from flask->jupyter-dash) (3.1.3)\n",
      "Requirement already satisfied: itsdangerous>=2.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from flask->jupyter-dash) (2.0.1)\n",
      "Requirement already satisfied: click>=8.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from flask->jupyter-dash) (8.1.7)\n",
      "Requirement already satisfied: comm>=0.1.1 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (0.1.2)\n",
      "Requirement already satisfied: debugpy>=1.6.5 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (1.6.7)\n",
      "Requirement already satisfied: jupyter-client>=6.1.12 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (7.4.9)\n",
      "Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (5.5.0)\n",
      "Requirement already satisfied: matplotlib-inline>=0.1 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (0.1.6)\n",
      "Requirement already satisfied: packaging in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (23.1)\n",
      "Requirement already satisfied: psutil in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (5.9.0)\n",
      "Requirement already satisfied: pyzmq>=24 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (24.0.1)\n",
      "Requirement already satisfied: tornado>=6.1 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (6.3.3)\n",
      "Requirement already satisfied: traitlets>=5.4.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipykernel->jupyter-dash) (5.7.1)\n",
      "Requirement already satisfied: decorator in c:\\users\\jsenf\\python\\lib\\site-packages (from ipython->jupyter-dash) (5.1.1)\n",
      "Requirement already satisfied: jedi>=0.16 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipython->jupyter-dash) (0.18.1)\n",
      "Requirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipython->jupyter-dash) (3.0.43)\n",
      "Requirement already satisfied: pygments>=2.4.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from ipython->jupyter-dash) (2.15.1)\n",
      "Requirement already satisfied: stack-data in c:\\users\\jsenf\\python\\lib\\site-packages (from ipython->jupyter-dash) (0.2.0)\n",
      "Requirement already satisfied: colorama in c:\\users\\jsenf\\python\\lib\\site-packages (from ipython->jupyter-dash) (0.4.6)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\jsenf\\python\\lib\\site-packages (from requests->jupyter-dash) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\jsenf\\python\\lib\\site-packages (from requests->jupyter-dash) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\jsenf\\python\\lib\\site-packages (from requests->jupyter-dash) (2.0.7)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\jsenf\\python\\lib\\site-packages (from requests->jupyter-dash) (2024.2.2)\n",
      "Requirement already satisfied: six>=1.7.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from retrying->jupyter-dash) (1.16.0)\n",
      "Requirement already satisfied: parso<0.9.0,>=0.8.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from jedi>=0.16->ipython->jupyter-dash) (0.8.3)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from Jinja2>=3.0->flask->jupyter-dash) (2.1.3)\n",
      "Requirement already satisfied: entrypoints in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-client>=6.1.12->ipykernel->jupyter-dash) (0.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-client>=6.1.12->ipykernel->jupyter-dash) (2.8.2)\n",
      "Requirement already satisfied: platformdirs>=2.5 in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->jupyter-dash) (3.10.0)\n",
      "Requirement already satisfied: pywin32>=300 in c:\\users\\jsenf\\python\\lib\\site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->jupyter-dash) (305.1)\n",
      "Requirement already satisfied: tenacity>=6.2.0 in c:\\users\\jsenf\\python\\lib\\site-packages (from plotly>=5.0.0->dash->jupyter-dash) (8.2.2)\n",
      "Requirement already satisfied: wcwidth in c:\\users\\jsenf\\python\\lib\\site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython->jupyter-dash) (0.2.5)\n",
      "Requirement already satisfied: zipp>=0.5 in c:\\users\\jsenf\\python\\lib\\site-packages (from importlib-metadata->dash->jupyter-dash) (3.17.0)\n",
      "Requirement already satisfied: executing in c:\\users\\jsenf\\python\\lib\\site-packages (from stack-data->ipython->jupyter-dash) (0.8.3)\n",
      "Requirement already satisfied: asttokens in c:\\users\\jsenf\\python\\lib\\site-packages (from stack-data->ipython->jupyter-dash) (2.0.5)\n",
      "Requirement already satisfied: pure-eval in c:\\users\\jsenf\\python\\lib\\site-packages (from stack-data->ipython->jupyter-dash) (0.2.2)\n"
     ]
    }
   ],
   "source": [
    "!pip install jupyter-dash\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bc9b862f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"650\"\n",
       "            src=\"http://127.0.0.1:8050/\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x1caae6e0e50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "---------------------------------------------------------------------------\n",
      "TypeError                                 Traceback (most recent call last)\n",
      "Cell In[1], line 111, in update_graph_frame(\n",
      "    n_intervals=None,\n",
      "    selected_condition='faces_left_faces_right',\n",
      "    current_fig=None\n",
      ")\n",
      "    102 @app.callback(\n",
      "    103     Output(\"diff-graph\", \"figure\", allow_duplicate=True),\n",
      "    104     [Input(\"interval\", \"n_intervals\")],\n",
      "   (...)\n",
      "    109 def update_graph_frame(n_intervals, selected_condition, current_fig):\n",
      "    110     # Aktualisieren der vertikalen Linie basierend auf Zeit\n",
      "--> 111     current_time = (n_intervals * 100) / 24\n",
      "        n_intervals = None\n",
      "    113     fig = go.Figure(current_fig)\n",
      "    114     fig.update_layout(shapes=[\n",
      "    115         dict(\n",
      "    116             type=\"line\",\n",
      "   (...)\n",
      "    121         )\n",
      "    122     ])\n",
      "\n",
      "TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import dash\n",
    "from dash import dcc, html, Input, Output, State\n",
    "import dash_bootstrap_components as dbc\n",
    "import pandas as pd\n",
    "import plotly.graph_objects as go\n",
    "import os\n",
    "\n",
    "# Laden des DataFrames diff_data_midi (ersetzen Sie dies durch Ihre DataFrame-Lade-Methode)\n",
    "diff_data_midi = pd.read_csv(\"/Users/jsenf/Desktop/empra_app/diff_data_midi.csv\")\n",
    "\n",
    "# Liste der verfügbaren Bedingungen und sound_conditions\n",
    "conditions = [\n",
    "    \"faces_left_faces_right\",\n",
    "    \"words_left_words_right\",\n",
    "    \"faces_left_words_left\",\n",
    "    \"faces_right_words_right\",\n",
    "    \"faces_right_words_left\",\n",
    "    \"faces_left_words_right\"\n",
    "]\n",
    "sound_conditions = [\"normal\", \"aesth\"]\n",
    "\n",
    "# Erstellen der Dash-App\n",
    "app = dash.Dash(__name__, external_stylesheets=[dbc.themes.BOOTSTRAP])\n",
    "\n",
    "app.layout = html.Div([\n",
    "    html.H1(\"MIDI Note Differences with Audio Synchronization\", style={\"textAlign\": \"center\"}),\n",
    "\n",
    "    # Dropdown-Menüs\n",
    "    html.Div([\n",
    "        dcc.Dropdown(\n",
    "            id=\"condition-dropdown\",\n",
    "            options=[{\"label\": condition, \"value\": condition} for condition in conditions],\n",
    "            value=conditions[0],\n",
    "            clearable=False,\n",
    "            style={\"width\": \"48%\", \"display\": \"inline-block\", \"marginRight\": \"2%\"}\n",
    "        ),\n",
    "        dcc.Dropdown(\n",
    "            id=\"sound-condition-dropdown\",\n",
    "            options=[{\"label\": sc, \"value\": sc} for sc in sound_conditions],\n",
    "            value=sound_conditions[0],\n",
    "            clearable=False,\n",
    "            style={\"width\": \"48%\", \"display\": \"inline-block\"}\n",
    "        )\n",
    "    ]),\n",
    "\n",
    "    # Audio Player\n",
    "    html.Audio(id=\"audio-player\", controls=True, style={\"width\": \"100%\", \"marginTop\": \"20px\"}),\n",
    "\n",
    "    # Graph\n",
    "    dcc.Graph(id=\"diff-graph\", style={\"height\": \"70vh\"}),\n",
    "\n",
    "    # Hidden Interval Component for Animation\n",
    "    dcc.Interval(id=\"interval\", interval=100, disabled=True),\n",
    "\n",
    "    # Start/Pause Button\n",
    "    html.Button(\"Start/Pause\", id=\"start-pause-button\", n_clicks=0, style={\"marginTop\": \"20px\"})\n",
    "])\n",
    "\n",
    "@app.callback(\n",
    "    [Output(\"audio-player\", \"src\"),\n",
    "     Output(\"diff-graph\", \"figure\")],\n",
    "    [Input(\"condition-dropdown\", \"value\"),\n",
    "     Input(\"sound-condition-dropdown\", \"value\")]\n",
    ")\n",
    "def update_content(selected_condition, selected_sound_condition):\n",
    "    # Audio-Dateipfad\n",
    "    audio_path = f\"assets/sounds/{selected_condition}_{selected_sound_condition}.wav\"\n",
    "\n",
    "    # Graph erstellen\n",
    "    fig = go.Figure()\n",
    "    fig.add_trace(go.Scatter(\n",
    "        x=diff_data_midi[\"time\"],\n",
    "        y=diff_data_midi[selected_condition],\n",
    "        mode=\"lines\",\n",
    "        name=selected_condition,\n",
    "        line=dict(color=\"purple\")\n",
    "    ))\n",
    "\n",
    "    fig.update_layout(\n",
    "        title=f\"Absolute Differences for {selected_condition}\",\n",
    "        xaxis_title=\"Time (ms)\",\n",
    "        yaxis_title=\"Absolute Difference\",\n",
    "        xaxis=dict(range=[0, 400]),\n",
    "        yaxis=dict(range=[0, diff_data_midi[selected_condition].max() + 5]),\n",
    "        template=\"plotly_white\"\n",
    "    )\n",
    "\n",
    "    return audio_path, fig\n",
    "\n",
    "@app.callback(\n",
    "    [Output(\"interval\", \"disabled\"),\n",
    "     Output(\"start-pause-button\", \"children\")],\n",
    "    [Input(\"start-pause-button\", \"n_clicks\")],\n",
    "    [State(\"interval\", \"disabled\")]\n",
    ")\n",
    "def toggle_animation(n_clicks, interval_disabled):\n",
    "    if n_clicks % 2 == 1:  # Start\n",
    "        return False, \"Pause\"\n",
    "    else:  # Pause\n",
    "        return True, \"Start\"\n",
    "\n",
    "@app.callback(\n",
    "    Output(\"diff-graph\", \"figure\", allow_duplicate=True),\n",
    "    [Input(\"interval\", \"n_intervals\")],\n",
    "    [State(\"condition-dropdown\", \"value\"),\n",
    "     State(\"diff-graph\", \"figure\")],\n",
    "    prevent_initial_call=\"initial_duplicate\"\n",
    ")\n",
    "def update_graph_frame(n_intervals, selected_condition, current_fig):\n",
    "    # Aktualisieren der vertikalen Linie basierend auf Zeit\n",
    "    current_time = (n_intervals * 100) / 24\n",
    "\n",
    "    fig = go.Figure(current_fig)\n",
    "    fig.update_layout(shapes=[\n",
    "        dict(\n",
    "            type=\"line\",\n",
    "            x0=current_time, x1=current_time,\n",
    "            y0=0, y1=1,\n",
    "            xref=\"x\", yref=\"paper\",\n",
    "            line=dict(color=\"red\", dash=\"dot\")\n",
    "        )\n",
    "    ])\n",
    "    return fig\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    app.run_server(debug=True)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
